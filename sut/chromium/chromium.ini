# Copyright (c) 2019-2020 Renata Hodovan, Akos Kiss.
#
# Licensed under the BSD 3-Clause License
# <LICENSE-BSD-3-Clause.rst or https://opensource.org/licenses/BSD-3-Clause>.
# This file may not be copied, modified, or distributed except according to
# those terms.

#################
#    Chromium   #
#################

[sut.chromium]
# Call job settings.
call.decorate(2)=fuzzinator.call.SanitizerAutomatonFilter
call.decorate(3)=fuzzinator.call.SanitizerAnalyzerDecorator
call.decorate(4)=fuzzinator.call.UniqueIdDecorator
call.decorate(5)=fuzzinator.call.PlatformInfoDecorator
call.decorate(6)=fuzzinator.call.AnonymizeDecorator
call.decorate(7)=chromium_version_decorator.ChromiumVersionDecorator
# Reduce job settings.
reduce=fuzzinator.reduce.Picireny
reduce_call.decorate(2)=${call.decorate(2)}
reduce_call.decorate(3)=${call.decorate(3)}
reduce_call.decorate(4)=${call.decorate(4)}
reduce_call.decorate(5)=${call.decorate(5)}
reduce_call.decorate(6)=${call.decorate(6)}
reduce_call.decorate(7)=${call.decorate(7)}
reduce_call.decorate(8)=fuzzinator.call.FileWriterDecorator
# Update job settings.
update_condition=fuzzinator.update.TimestampUpdateCondition
update=fuzzinator.update.SubprocessUpdate
# Define issue tracker.
tracker=fuzzinator.tracker.MonorailTracker
# Define issue formatters.
formatter=fuzzinator.formatter.JinjaFormatter
formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter=fuzzinator.formatter.JinjaFormatter
wui_formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter.decorate(1)=fuzzinator.formatter.MarkdownDecorator
# Define custom issue exporter.
exporter=fuzzinator.exporter.TestExporter

# SanitizerAutomatonFilter
[sut.chromium.call.decorate(2)]
stderr=["mns /logging|LogMessage|base::debug|base.memory|base::OS::Abort|__interceptor_backtrace|__GI_raise|StackTrace|StackDumpSignalHandler|sk_abort_no_print|gsignal|<unknown>|__gnu_debug|backtrace|operator/",
        "mss /:FATAL:(?P<file>[^:(]+)\\((?P<line>[0-9]+)\\)\\] (?P<error_type>(?:Check|Security D?CHECK) failed): (?P<condition>.+?)\\s+(?:\\(.+? vs\\. .+?\\))/",
        "mss /:FATAL:(?P<file>[^:(]+)\\((?P<line>[0-9]+)\\)\\] (?P<error_type>(?:Check|Security D?CHECK) failed): (?P<condition>.+?)\\.\\s+.+/",
        "mss /:FATAL:(?P<file>[^:(]+)\\((?P<line>[0-9]+)\\)\\] (?P<error_type>(?:Check|Security D?CHECK) failed): (?P<condition>.+)\\.\\s*$$/",
        "mss /.*?\\/(?P<file>[^/ ]+):(?P<line>[0-9]+): fatal error: \\\"(?P<error_type>assert)\\((?P<condition>.*?)\\)[\\\"]/",
        "mss /# (?P<error_type>(Debug )?[Cc]heck failed)\\s*:\\s*(?P<condition>.*?)[.]/",
        "mas /# (?P<error_type>Fatal error) in (?P<file>[^,]+), line (?P<line>\\d+)/",
        "mas /# (?P<error_type>Fatal error) in (?P<function>[^,]+)/",
        "mas /# (?P<condition>unreachable code|unimplemented code|Allocation failed.*)/",
        "mas /abort: (?P<error_type>CSA_ASSERT failed): (?P<condition>.+) (\\[(?P<file>.+):(?P<line>\\d+)\\])?/"]

# UniqueIdDecorator
[sut.chromium.call.decorate(4)]
properties=["error_type", "condition", "function"]

# AnonymizeDecorator
[sut.chromium.call.decorate(6)]
properties=["stderr", "stdout"]
old_text=${chromium:root_dir}
new_text=chromium/

# ChromiumVersionDecorator
[sut.chromium.call.decorate(7)]
root_dir=${chromium:root_dir}


### REDUCE/VALIDATE ###

[sut.chromium.reduce]
hddmin=${chromium.picireny:hddmin}
parallel=${chromium.picireny:parallel}
combine_loops=${chromium.picireny:combine_loops}
split_method=${chromium.picireny:split_method}
subset_first=${chromium.picireny:subset_first}
subset_iterator=${chromium.picireny:subset_iterator}
complement_iterator=${chromium.picireny:complement_iterator}
jobs=${chromium.picireny:jobs}
max_utilization=${chromium.picireny:max_utilization}
encoding=${chromium.picireny:encoding}
antlr=${chromium.picireny:antlr}
format=${chromium.picireny:format}
lang=${chromium.picireny:lang}
hdd_star=${chromium.picireny:hdd_star}
flatten_recursion=${chromium.picireny:flatten_recursion}
squeeze_tree=${chromium.picireny:squeeze_tree}
skip_unremovable=${chromium.picireny:skip_unremovable}
skip_whitespace=${chromium.picireny:skip_whitespace}
build_hidden_tokens=${chromium.picireny:build_hidden_tokens}
granularity=${chromium.picireny:granularity}
cache_class=${chromium.picireny:cache_class}
cleanup=${chromium.picireny:cleanup}

# SanitizerAutomatonFilter
[sut.chromium.reduce_call.decorate(2)]
stderr=${sut.chromium.call.decorate(2):stderr}

# UniqueIdDecorator
[sut.chromium.reduce_call.decorate(4)]
properties=${sut.chromium.call.decorate(4):properties}

# AnonymizeDecorator
[sut.chromium.reduce_call.decorate(6)]
properties=${sut.chromium.call.decorate(6):properties}
old_text=${sut.chromium.call.decorate(6):old_text}
new_text=${sut.chromium.call.decorate(6):new_text}

# ChromiumVersionDecorator
[sut.chromium.reduce_call.decorate(7)]
root_dir=${sut.chromium.call.decorate(7):root_dir}

# FileWriterDecorator
[sut.chromium.reduce_call.decorate(8)]
filename=${fuzzinator:work_dir}/sut/chromium/{uid}/reduce/{uid}.html


### UPDATE ###

[sut.chromium.update_condition]
age=${chromium:age}
path=${chromium:build_dir}/${chromium:binary}

[sut.chromium.update]
cwd=${chromium:root_dir}
command=${chromium:build}
env=${chromium:build_env}


### REPORT ###

[sut.chromium.tracker.init]
project_id=chromium


### FORMATTER ###

[sut.chromium.formatter.init]
short={{id}}
long_file=${fuzzinator.custom:config_root}/sut/chromium/chromium-report.txt

[sut.chromium.wui_formatter.init]
short=${sut.chromium.formatter.init:short}
long_file=${fuzzinator.custom:config_root}/sut/chromium/chromium-report-wui.txt

[sut.chromium.wui_formatter.decorate(1)]
extensions=["extra", "codehilite", "fenced_code"]


### EXPORTER ###

[sut.chromium.exporter.init]
extension=.html
type=text/html
